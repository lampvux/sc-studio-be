/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { ServerCostListRelationFilter } from "../../serverCost/base/ServerCostListRelationFilter";
import { ServerLogListRelationFilter } from "../../serverLog/base/ServerLogListRelationFilter";
import { EnumServerStatus } from "./EnumServerStatus";
import { UserListRelationFilter } from "../../user/base/UserListRelationFilter";

@InputType()
class ServerWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  deployedAt?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  description?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ServerCostListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ServerCostListRelationFilter)
  @IsOptional()
  @Field(() => ServerCostListRelationFilter, {
    nullable: true,
  })
  serverCosts?: ServerCostListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => ServerLogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ServerLogListRelationFilter)
  @IsOptional()
  @Field(() => ServerLogListRelationFilter, {
    nullable: true,
  })
  serverLogs?: ServerLogListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumServerStatus,
  })
  @IsEnum(EnumServerStatus)
  @IsOptional()
  @Field(() => EnumServerStatus, {
    nullable: true,
  })
  status?: "Option1";

  @ApiProperty({
    required: false,
    type: () => UserListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserListRelationFilter)
  @IsOptional()
  @Field(() => UserListRelationFilter, {
    nullable: true,
  })
  userId?: UserListRelationFilter;
}

export { ServerWhereInput as ServerWhereInput };
