/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsString,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { ServerCostCreateNestedManyWithoutServersInput } from "./ServerCostCreateNestedManyWithoutServersInput";
import { ServerLogCreateNestedManyWithoutServersInput } from "./ServerLogCreateNestedManyWithoutServersInput";
import { EnumServerStatus } from "./EnumServerStatus";
import { UserCreateNestedManyWithoutServersInput } from "./UserCreateNestedManyWithoutServersInput";

@InputType()
class ServerCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  deployedAt?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: () => ServerCostCreateNestedManyWithoutServersInput,
  })
  @ValidateNested()
  @Type(() => ServerCostCreateNestedManyWithoutServersInput)
  @IsOptional()
  @Field(() => ServerCostCreateNestedManyWithoutServersInput, {
    nullable: true,
  })
  serverCosts?: ServerCostCreateNestedManyWithoutServersInput;

  @ApiProperty({
    required: false,
    type: () => ServerLogCreateNestedManyWithoutServersInput,
  })
  @ValidateNested()
  @Type(() => ServerLogCreateNestedManyWithoutServersInput)
  @IsOptional()
  @Field(() => ServerLogCreateNestedManyWithoutServersInput, {
    nullable: true,
  })
  serverLogs?: ServerLogCreateNestedManyWithoutServersInput;

  @ApiProperty({
    required: true,
    enum: EnumServerStatus,
  })
  @IsEnum(EnumServerStatus)
  @Field(() => EnumServerStatus)
  status!: "WorkInProgress" | "Deployed" | "Running" | "Stopped";

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutServersInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutServersInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutServersInput, {
    nullable: true,
  })
  userId?: UserCreateNestedManyWithoutServersInput;
}

export { ServerCreateInput as ServerCreateInput };
