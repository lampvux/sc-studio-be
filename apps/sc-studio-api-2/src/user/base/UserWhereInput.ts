/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { UserRewardListRelationFilter } from "../../userReward/base/UserRewardListRelationFilter";
import { SmartContractListRelationFilter } from "../../smartContract/base/SmartContractListRelationFilter";
import { UserSpentListRelationFilter } from "../../userSpent/base/UserSpentListRelationFilter";

@InputType()
class UserWhereInput {
  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserRewardListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserRewardListRelationFilter)
  @IsOptional()
  @Field(() => UserRewardListRelationFilter, {
    nullable: true,
  })
  rewards?: UserRewardListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => SmartContractListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SmartContractListRelationFilter)
  @IsOptional()
  @Field(() => SmartContractListRelationFilter, {
    nullable: true,
  })
  smartContracts?: SmartContractListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  username?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => UserSpentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => UserSpentListRelationFilter)
  @IsOptional()
  @Field(() => UserSpentListRelationFilter, {
    nullable: true,
  })
  userSpents?: UserSpentListRelationFilter;
}

export { UserWhereInput as UserWhereInput };
